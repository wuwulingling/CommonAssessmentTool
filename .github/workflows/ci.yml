name: Python CI Pipeline

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  build:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v4 # Checkout the repository

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5 # Set up Python environment
        with:
          python-version: "3.11"

      # Step 3: Install project dependencies, linters, formatters, and testing tools
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip  # Upgrade pip to the latest version
          pip install setuptools wheel
          pip install -r requirements.txt  # Install dependencies from requirements.txt
          pip install pylint pytest black

      # Step 4: Run code quality checks with pylint
      - name: Lint with pylint
        run: |
          pylint app/ tests/

      # Step 5: Check code formatting with black
      - name: Check code formatting with black
        run: |
          black --check app/ tests/  

      # Step 6: Run tests with pytest
      - name: Run Tests
        run: |
          pytest tests/

      # Step 7: Lint Dockerfile syntax (optional)
      - name: Lint Dockerfile syntax
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./Dockerfile

      # Step 8: Build Docker Image
      - name: Build Docker Image
        run: docker build -t case-management-api .

      # Step 9: Run Docker Container
      - name: Run Docker Container
        run: |
          docker run -d -p 8000:8000 --name test-container case-management-api
          sleep 5

      # Step 10: Test API Endpoint
      - name: Test API Endpoint
        run: curl --fail http://localhost:8000/docs

      # Step 11: Cleanup Docker Container
      - name: Cleanup Docker Container
        run: |
          docker stop test-container
          docker rm test-container

      # Step 12: Print Success Message
      - name: Print Success Message
        if: success() # Only runs if previous steps are successful
        run: |
          echo "CI Pipeline completed successfully!"
          echo "========================"
          echo "✓ Code checked out"
          echo "✓ Python environment set up"
          echo "✓ Dependencies installed"
          echo "✓ Linting and formatting completed"
          echo "✓ Tests executed"
          echo "========================"
